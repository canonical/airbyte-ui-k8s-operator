# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

name: airbyte-ui
summary: Airbyte UI rock
description: Airbyte UI OCI image for the Airbyte UI charm
version: "1.4.0"
build-base: ubuntu@24.04
base: ubuntu@24.04
license: Apache-2.0
platforms:
  amd64:

services:
  nginx:
    override: replace
    summary: "NGINX service to serve Airbyte WebApp"
    command: "./docker-entrypoint.sh nginx"
    startup: enabled

environment:
  JAVA_HOME: /usr/lib/jvm/java-21-openjdk-amd64
  CDK_PYTHON: /usr/bin/python3.10
  CDK_ENTRYPOINT: /usr/lib/python3.10/dist-packages/airbyte_cdk/connector_builder/main.py
  CDK_VERSION: "5.12.0"

# # Please refer to
# # https://discourse.ubuntu.com/t/unifying-user-identity-across-snaps-and-rocks/36469
# # for more information about shared user.
# # The UID 584792 corresponds to _daemon_ user.
# run_user: _daemon_

parts:
  nginx-user:
    plugin: nil
    source-type: local
    source: .
    stage-packages:
      - base-passwd_data
      - base-files_base
    override-build: |
      craftctl default
      groupadd --root ${CRAFT_PART_INSTALL} nginx
      useradd -d /home/nginx -s /bin/bash --root ${CRAFT_PART_INSTALL} -g nginx nginx

      ls /etc
      ls /etc/nginx
      # useradd -d /home/nginx --root ${CRAFT_PART_INSTALL} -g nginx nginx
      # rm $CRAFT_PART_INSTALL/etc/nginx/nginx.conf

  nginx:
    plugin: autotools
    after:
      - nginx-user
    source: https://nginx.org/download/nginx-1.23.3.tar.gz
    build-packages:
      - libgd-dev
      - libpcre3-dev
      - libssl-dev
      - zlib1g-dev
    stage-packages:
      - ca-certificates_data
    autotools-configure-parameters:
      - --prefix=/usr/share/nginx
      - --user=nginx
      - --sbin-path=/usr/sbin/nginx
      - --conf-path=/etc/nginx/nginx.conf
      - --http-log-path=/var/log/nginx/access.log
      - --error-log-path=/var/log/nginx/error.log
      - --with-pcre
      - --lock-path=/var/lock/nginx.lock
      - --pid-path=/var/run/nginx.pid
      - --with-http_ssl_module
      - --with-http_image_filter_module=dynamic
      - --modules-path=/etc/nginx/modules
      - --with-http_v2_module
      - --with-stream=dynamic
      - --with-http_addition_module
      - --with-http_mp4_module
    override-build: |
      # craftctl default
      rm $CRAFT_PART_INSTALL/etc/nginx/nginx.conf

  config:
    plugin: dump
    after:
      - nginx
    source: files
    organize:
      nginx.conf: etc/nginx/nginx.conf
      default.conf: etc/nginx/conf.d/default.conf
    stage:
      - etc/nginx/nginx.conf
      - etc/nginx/conf.d/default.conf

  patches:
    plugin: dump
    after:
      - config
    source: ./patches
    organize:
      vite-config-http.patch: patches/vite-config-http.patch
    stage:
      - patches/vite-config-http.patch
    prime:
      - "-*"

  pull-airbyte-repo:
    after: [patches]
    plugin: dump
    source: https://github.com/airbytehq/airbyte-platform.git # yamllint disable-line
    source-type: git
    source-tag: v1.4.0
    build-packages:
      - jq
      - curl
      - coreutils
      - bash
      - gradle
      - openjdk-21-jdk-headless
      - npm
      - libpq-dev
      - python3-dev
      - nginx
      - xxd
      - tzdata
      - gettext
      - gettext-base
    build-snaps:
      - docker
    stage-packages:
      - openjdk-21-jdk-headless
      - libpq-dev
      - gcc
      - libc6-dev
      - make
      - libssl-dev
      - libpcre2-dev
      - zlib1g-dev
      - linux-headers-generic
      - bash
      - findutils
      - gettext
      - gettext-base
      - python3-dev
      - jq
      - curl
      - tar
      - gzip
      - ca-certificates
      - libpcre3
      - libssl3
      - zlib1g
    override-build: |
      GID=584792

      NGINX_UID=$(id -u nginx)

      git apply ${CRAFT_STAGE}/patches/*.patch

      ./gradlew :oss:airbyte-webapp:assemble --continue --max-workers 1
      ./gradlew --stop

      cp -r . ${CRAFT_PART_INSTALL}/airbyte-platform

      mkdir ${CRAFT_PART_INSTALL}/docker-entrypoint.d
      mkdir -p ${CRAFT_PART_INSTALL}/etc/nginx/templates
      mkdir -p ${CRAFT_PART_INSTALL}/etc/nginx/conf.d
      mkdir -p ${CRAFT_PART_INSTALL}/usr/share/nginx/html
      mkdir -p /var/cache/nginx

      cp -r ./docker/airbyte-nginx/alpine-slim/10-listen-on-ipv6-by-default.sh ${CRAFT_PART_INSTALL}/docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
      cp -r ./docker/airbyte-nginx/alpine-slim/15-local-resolvers.envsh ${CRAFT_PART_INSTALL}/docker-entrypoint.d/15-local-resolvers.envsh
      cp -r ./docker/airbyte-nginx/alpine-slim/20-envsubst-on-templates.sh ${CRAFT_PART_INSTALL}/docker-entrypoint.d/20-envsubst-on-templates.sh
      cp -r ./docker/airbyte-nginx/alpine-slim/30-tune-worker-processes.sh ${CRAFT_PART_INSTALL}/docker-entrypoint.d/30-tune-worker-processes.sh
      cp -r ./docker/airbyte-nginx/alpine-slim/docker-entrypoint.sh ${CRAFT_PART_INSTALL}/docker-entrypoint.sh

      cp -r ./airbyte-webapp/nginx/default.conf.template ${CRAFT_PART_INSTALL}/etc/nginx/templates
      cp -r ./airbyte-webapp/build/airbyte/docker/bin/build ${CRAFT_PART_INSTALL}/usr/share/nginx/html
      
      # Ensure default.conf exists before modifying it
      if [ ! -f /etc/nginx/conf.d/default.conf ]; then
          echo "Creating default.conf..."
          cat <<EOF > /etc/nginx/conf.d/default.conf
      server {
          listen 80;
          server_name localhost;
          location / {
              root /usr/share/nginx/html;
              index index.html;
          }
      }
      EOF
      fi

      sed -i 's,listen       80;,listen       8080;,' /etc/nginx/conf.d/default.conf
      sed -i '/user  nginx;/d' /etc/nginx/nginx.conf
      sed -i 's,/var/run/nginx.pid,/tmp/nginx.pid,' /etc/nginx/nginx.conf
      sed -i "/^http {/a \    proxy_temp_path /tmp/proxy_temp;\n    client_body_temp_path /tmp/client_temp;\n    fastcgi_temp_path /tmp/fastcgi_temp;\n    uwsgi_temp_path /tmp/uwsgi_temp;\n    scgi_temp_path /tmp/scgi_temp;\n" /etc/nginx/nginx.conf
      # nginx user must own the cache and etc directory to write cache and tweak the nginx config
      chown -R $NGINX_UID:nginx /var/cache/nginx
      chmod -R g+w /var/cache/nginx
      chown -R $NGINX_UID:nginx /etc/nginx
      chmod -R g+w /etc/nginx

      which envsubst

      cp -r /usr/bin/envsubst ${CRAFT_PART_INSTALL}/envsubst
    organize:
      envsubst: bin/envsubst
    stage:
      - etc/nginx/templates/default.conf.template
      - usr/share/nginx/html
      - docker-entrypoint.sh
      - docker-entrypoint.d
      - bin/envsubst
    # permissions:
    #   - path: etc/nginx
    #     owner: 584792
    #     group: 584792
    #     mode: "755"
    #   - path: etc/nginx/conf.d
    #     owner: 584792
    #     group: 584792
    #     mode: "755"
