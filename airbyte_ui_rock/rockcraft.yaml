# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

name: airbyte-ui
summary: Airbyte UI rock
description: Airbyte UI OCI image for the Airbyte UI charm
version: "1.4.0"
build-base: ubuntu@24.04
base: ubuntu@24.04
license: Apache-2.0
platforms:
  amd64:

services:
  nginx:
    override: replace
    summary: "NGINX service to serve Airbyte WebApp"
    command: "./docker-entrypoint.sh nginx -c /etc/nginx/nginx.conf"
    startup: enabled

environment:
  JAVA_HOME: /usr/lib/jvm/java-21-openjdk-amd64
  CDK_PYTHON: /usr/bin/python3.10
  CDK_ENTRYPOINT: /usr/lib/python3.10/dist-packages/airbyte_cdk/connector_builder/main.py
  CDK_VERSION: "5.12.0"

parts:
  config:
    plugin: dump
    source: files
    # override-build: |
    #   mkdir -p ${CRAFT_PART_INSTALL}/etc/nginx/conf.d

    #   # Update nginx configuration files (inside the install tree)
    #   sed -i 's,listen       80;,listen       8080;,' ./default.conf
    #   sed -i 's,/var/run/nginx.pid,/tmp/nginx.pid,' ./nginx.conf
    #   sed -i "/^http {/a \    proxy_temp_path /tmp/proxy_temp;\n    client_body_temp_path /tmp/client_temp;\n    fastcgi_temp_path /tmp/fastcgi_temp;\n    uwsgi_temp_path /tmp/uwsgi_temp;\n    scgi_temp_path /tmp/scgi_temp;\n" ./nginx.conf
    organize:
      nginx.conf: etc/nginx/nginx.conf
      default.conf: etc/nginx/conf.d/default.conf
    stage:
      - etc/nginx/nginx.conf
      - etc/nginx/conf.d/default.conf

  patches:
    plugin: dump
    source: ./patches
    organize:
      vite-config-http.patch: patches/vite-config-http.patch
    stage:
      - patches/vite-config-http.patch
    prime:
      - "-*"

  pull-airbyte-repo:
    after: [patches, config]
    plugin: dump
    source: https://github.com/airbytehq/airbyte-platform.git
    source-type: git
    source-tag: v1.4.0
    build-packages:
      - jq
      - curl
      - coreutils
      - bash
      - gradle
      - openjdk-21-jdk-headless
      - npm
      - libpq-dev
      - python3-dev
      - nginx
      - xxd
      - tzdata
      - gettext
      - gettext-base
    build-snaps:
      - docker
    stage-packages:
      - openjdk-21-jdk-headless
      - libpq-dev
      - gcc
      - libc6-dev
      - make
      - libssl-dev
      - libpcre2-dev
      - zlib1g-dev
      - linux-headers-generic
      - bash
      - findutils
      - gettext
      - gettext-base
      - python3-dev
      - jq
      - curl
      - tar
      - gzip
      - ca-certificates
      - libpcre3
      - libssl3
      - zlib1g
      - base-passwd
      - base-files
      - nginx
    override-build: |
      craftctl default

      groupadd --root ${CRAFT_PART_INSTALL} nginx
      useradd -d /home/nginx -s /bin/bash --root ${CRAFT_PART_INSTALL} -g nginx nginx

      groupadd nginx
      useradd -d /home/nginx -s /bin/bash -g nginx nginx

      grep nginx ${CRAFT_PART_INSTALL}/etc/passwd || echo "nginx user not found in passwd"

      git apply ${CRAFT_STAGE}/patches/*.patch

      ./gradlew :oss:airbyte-webapp:assemble --continue --max-workers 1
      ./gradlew --stop

      cp -r . ${CRAFT_PART_INSTALL}/airbyte-platform

      mkdir -p ${CRAFT_PART_INSTALL}/docker-entrypoint.d
      mkdir -p ${CRAFT_PART_INSTALL}/etc/nginx/templates
      mkdir -p ${CRAFT_PART_INSTALL}/etc/nginx/conf.d
      mkdir -p ${CRAFT_PART_INSTALL}/usr/share/nginx/html
      mkdir -p ${CRAFT_PART_INSTALL}/var/cache/nginx

      cp -r ./docker/airbyte-nginx/alpine-slim/10-listen-on-ipv6-by-default.sh ${CRAFT_PART_INSTALL}/docker-entrypoint.d/
      cp -r ./docker/airbyte-nginx/alpine-slim/15-local-resolvers.envsh ${CRAFT_PART_INSTALL}/docker-entrypoint.d/
      cp -r ./docker/airbyte-nginx/alpine-slim/20-envsubst-on-templates.sh ${CRAFT_PART_INSTALL}/docker-entrypoint.d/
      cp -r ./docker/airbyte-nginx/alpine-slim/30-tune-worker-processes.sh ${CRAFT_PART_INSTALL}/docker-entrypoint.d/
      cp -r ./docker/airbyte-nginx/alpine-slim/docker-entrypoint.sh ${CRAFT_PART_INSTALL}/

      cp -r ./airbyte-webapp/nginx/default.conf.template ${CRAFT_PART_INSTALL}/etc/nginx/templates
      cp -r ./airbyte-webapp/build/airbyte/docker/bin/build ${CRAFT_PART_INSTALL}/usr/share/nginx/html

      # Update nginx configuration files (inside the install tree)
      # sed -i 's,listen       80;,listen       8080;,' ${CRAFT_PART_INSTALL}/etc/nginx/conf.d/default.conf
      # sed -i 's,/var/run/nginx.pid,/tmp/nginx.pid,' ${CRAFT_PART_INSTALL}/etc/nginx/nginx.conf
      # sed -i "/^http {/a \    proxy_temp_path /tmp/proxy_temp;\n    client_body_temp_path /tmp/client_temp;\n    fastcgi_temp_path /tmp/fastcgi_temp;\n    uwsgi_temp_path /tmp/uwsgi_temp;\n    scgi_temp_path /tmp/scgi_temp;\n" ${CRAFT_PART_INSTALL}/etc/nginx/nginx.conf

      # Set permissions
      chown -R $(id -u nginx):nginx ${CRAFT_PART_INSTALL}/var/cache/nginx
      chmod -R g+w ${CRAFT_PART_INSTALL}/var/cache/nginx
      chown -R $(id -u nginx):nginx ${CRAFT_PART_INSTALL}/etc/nginx
      chmod -R g+w ${CRAFT_PART_INSTALL}/etc/nginx

      # Copy binaries
      cp -r /usr/bin/envsubst ${CRAFT_PART_INSTALL}/bin/envsubst
      cp -r /usr/sbin/nginx ${CRAFT_PART_INSTALL}/sbin/nginx
    stage:
      - etc/nginx
      - var/cache/nginx
      - usr/share/nginx/html
      - docker-entrypoint.sh
      - docker-entrypoint.d
      - bin/envsubst
      - sbin/nginx
