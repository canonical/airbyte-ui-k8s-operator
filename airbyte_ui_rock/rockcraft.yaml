# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

name: airbyte-ui
summary: Airbyte UI rock
description: Airbyte UI OCI image for the Airbyte UI charm
version: "1.4.0"
base: ubuntu@22.04
license: Apache-2.0
platforms:
  amd64:

services:
  nginx:
    override: replace
    summary: "NGINX service to serve Airbyte WebApp"
    command: "./docker-entrypoint.sh nginx"
    startup: enabled

environment:
  JAVA_HOME: /usr/lib/jvm/java-21-openjdk-amd64
  CDK_PYTHON: /usr/bin/python3.10
  CDK_ENTRYPOINT: /usr/lib/python3.10/dist-packages/airbyte_cdk/connector_builder/main.py
  CDK_VERSION: "5.12.0"

# Please refer to
# https://discourse.ubuntu.com/t/unifying-user-identity-across-snaps-and-rocks/36469
# for more information about shared user.
# The UID 584792 corresponds to _daemon_ user.
run_user: _daemon_

parts:
  nginx-user:
    plugin: nil
    overlay-script: |
      # chroot $CRAFT_OVERLAY
      # useradd -M -U -r nginx
      chroot $CRAFT_OVERLAY /bin/sh -c "useradd -M -U -r -s /usr/sbin/nologin -d /nonexistent nginx"

  nginx:
    plugin: autotools
    after:
      - nginx-user
    source: https://nginx.org/download/nginx-1.23.3.tar.gz
    build-packages:
      - libgd-dev
      - libpcre3-dev
      - libssl-dev
      - zlib1g-dev
    stage-packages:
      - ca-certificates_data
    autotools-configure-parameters:
      - --prefix=/usr/share/nginx
      - --user=nginx
      - --sbin-path=/usr/sbin/nginx
      - --conf-path=/etc/nginx/nginx.conf
      - --http-log-path=/var/log/nginx/access.log
      - --error-log-path=/var/log/nginx/error.log
      - --with-pcre
      - --lock-path=/var/lock/nginx.lock
      - --pid-path=/var/run/nginx.pid
      - --with-http_ssl_module
      - --with-http_image_filter_module=dynamic
      - --modules-path=/etc/nginx/modules
      - --with-http_v2_module
      - --with-stream=dynamic
      - --with-http_addition_module
      - --with-http_mp4_module
    override-build: |
      craftctl default
      rm $CRAFT_PART_INSTALL/etc/nginx/nginx.conf

  config:
    plugin: dump
    after:
      - nginx
    source: files
    organize:
      nginx.conf: etc/nginx/nginx.conf

  patches:
    plugin: dump
    after:
      - config
    source: ./patches
    organize:
      vite-config-http.patch: patches/vite-config-http.patch
    stage:
      - patches/vite-config-http.patch
    prime:
      - "-*"

  pull-airbyte-repo:
    after: [patches]
    plugin: dump
    source: https://github.com/airbytehq/airbyte-platform.git # yamllint disable-line
    source-type: git
    source-tag: v1.4.0
    build-packages:
      - jq
      - curl
      - coreutils
      - bash
      - gradle
      - openjdk-21-jdk-headless
      - npm
      - libpq-dev
      - python3-dev
      - nginx
    build-snaps:
      - docker
    stage-packages:
      - openjdk-21-jdk-headless
      - libpq-dev
      - python3-dev
      - jq
      - curl
      - tar
      - gzip
      - ca-certificates
      - libpcre3
      - libssl3
      - zlib1g
    override-build: |
      git apply ${CRAFT_STAGE}/patches/*.patch

      ./gradlew :oss:airbyte-webapp:build --continue --max-workers 1
      ./gradlew --stop

      cp -r . ${CRAFT_PART_INSTALL}/airbyte-platform

      mkdir ${CRAFT_PART_INSTALL}/docker-entrypoint.d
      mkdir -p ${CRAFT_PART_INSTALL}/etc/nginx/templates
      mkdir -p ${CRAFT_PART_INSTALL}/usr/share/nginx/html

      cp -r ./docker/airbyte-nginx/alpine-slim/10-listen-on-ipv6-by-default.sh ${CRAFT_PART_INSTALL}/docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
      cp -r ./docker/airbyte-nginx/alpine-slim/15-local-resolvers.envsh ${CRAFT_PART_INSTALL}/docker-entrypoint.d/15-local-resolvers.envsh
      cp -r ./docker/airbyte-nginx/alpine-slim/20-envsubst-on-templates.sh ${CRAFT_PART_INSTALL}/docker-entrypoint.d/20-envsubst-on-templates.sh
      cp -r ./docker/airbyte-nginx/alpine-slim/30-tune-worker-processes.sh ${CRAFT_PART_INSTALL}/docker-entrypoint.d/30-tune-worker-processes.sh

      cp -r ./airbyte-webapp/nginx/default.conf.template ${CRAFT_PART_INSTALL}/etc/nginx/templates
      cp -r ./airbyte-webapp/build/airbyte/docker/bin/build ${CRAFT_PART_INSTALL}/usr/share/nginx/html
      cp -r ./docker/airbyte-nginx/alpine-slim/docker-entrypoint.sh ${CRAFT_PART_INSTALL}/docker-entrypoint.sh
    # organize:
    #   airbyte-platform/airbyte-webapp/nginx/default.conf.template: etc/nginx/templates/default.conf.template
    #   airbyte-platform/airbyte-webapp/bin/build: usr/share/nginx/html
    #   airbyte-platform/docker/airbyte-nginx/alpine-slim/docker-entrypoint.sh: docker-entrypoint.sh
    stage:
      - etc/nginx/templates/default.conf.template
      - usr/share/nginx/html
      - docker-entrypoint.sh
      - docker-entrypoint.d
    permissions:
      - path: etc/nginx
        owner: 584792
        group: 584792
        mode: "755"
    # stage:
      # - airbyte-platform

  # build-airbyte-webapp:
  #   after: [pull-airbyte-repo]
  #   plugin: nil
  #   build-packages:
  #     - jq
  #     - curl
  #     - coreutils
  #     - bash
  #     - gradle
  #     - openjdk-21-jdk-headless
  #     - npm
  #     - libpq-dev
  #     - python3-dev
  #   build-snaps:
  #     - docker
    # stage-packages:
    #   - openjdk-21-jdk-headless
    #   - libpq-dev
    #   - python3-dev
    #   - nginx
    #   - jq
    #   - curl
    #   - tar
    #   - gzip
    #   - ca-certificates
    #   - libpcre3
    #   - libssl3
    #   - zlib1g
    # override-build: |
    #   cd ${CRAFT_STAGE}/airbyte-platform
    #   git apply ${CRAFT_STAGE}/patches/*.patch

    #   ./gradlew :oss:airbyte-webapp:build --continue --max-workers 1
    #   ./gradlew --stop

    #   cp -r . ${CRAFT_PART_INSTALL}/airbyte-platform
    # stage:
      # - airbyte-platform

  # nginx:
  #   plugin: nil
  #   after: [pull-airbyte-repo]
  #   source: .
  #   organize:
  #     airbyte-platform/airbyte-webapp/nginx/default.conf.template: etc/nginx/templates/default.conf.template
  #     airbyte-platform/airbyte-webapp/bin/build: usr/share/nginx/html
  #     docker-entrypoint.sh: airbyte-platform/docker/airbyte-nginx/alpine-slim/docker-entrypoint.sh
  #   stage:
  #     - etc/nginx/templates/default.conf.template
  #     - usr/share/nginx/html
  #     - airbyte-platform/docker/airbyte-nginx/alpine-slim/docker-entrypoint.sh
